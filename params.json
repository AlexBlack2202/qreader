{
  "name": "Qreader",
  "tagline": "A library that uses google's mobile vision api and simplify the QR code reading process",
  "body": "#QREader\r\n[![Maven Central](https://maven-badges.herokuapp.com/maven-central/com.github.nisrulz/qreader/badge.svg)](https://maven-badges.herokuapp.com/maven-central/com.github.nisrulz/qreader) [![Android Arsenal](https://img.shields.io/badge/Android%20Arsenal-QREader-green.svg?style=true)](https://android-arsenal.com/details/1/3478)\r\n\r\n[![Twitter Follow](https://img.shields.io/twitter/follow/nisrulz.svg?style=social)](https://twitter.com/nisrulz)\r\n\r\nA library that uses google's mobile vision api and simplify the QR code reading process \r\n\r\n#Integration\r\n- QREader is available in the MavenCentral, so getting it as simple as adding it as a dependency\r\n```gradle\r\ncompile 'com.github.nisrulz:qreader:1.0.6'\r\n```\r\n\r\n#Usage\r\n+ First add a `SurfaceView` to your layout and give it an id\r\n```java\r\n<SurfaceView\r\n        android:id=\"@+id/camera_view\"\r\n        android:layout_width=\"320dp\"\r\n        android:layout_height=\"320dp\"/>\r\n```\r\n\r\n+ Then in your Activity code reference the `SurfaceView`\r\n```java\r\nSurfaceView surfaceView = (SurfaceView) findViewById(R.id.camera_view);\r\n```\r\n\r\n+ Next create an object of `QREader` using the `Builder` in your `onCreate()`\r\n    ```java\r\n    QREader qrEader;\r\n    .\r\n    ..\r\n    ...\r\n     @Override protected void onCreate(Bundle savedInstanceState) {\r\n        ..\r\n    \r\n        surfaceView = (SurfaceView) findViewById(R.id.camera_view);\r\n    \r\n        qrEader = new QREader.Builder(this, surfaceView, new QRDataListener() {\r\n          @Override public void onDetected(final String data) {\r\n            // Do something with the string data\r\n            \r\n            Log.d(\"QREader\", \"Value : \" + data);\r\n          }\r\n        }).build();\r\n      }    \r\n    ```\r\n    \r\n    *where* \r\n    + `Builder` takes in arguments as `Builder(context, surfaceview, qrdatalistner)`\r\n    + **[Optional]** To modify further you can call  below functions on the `Builder` before calling the `build()`\r\n      + `enableAutofocus(boolean autofocus_enabled)`  // Default is `true`\r\n      + `width(int width)` // Default is `800`\r\n      + `height(int height)` // Default is `800`\r\n      + `facing(int facing)` // Default is `QREader.BACK_CAM`\r\n        + where argument can be one of  `QREader.BACK_CAM` , `QREader.FRONT_CAM`\r\n\r\n+ Next Call ` qrEader.init()`, right after you `build()` your object using the `Builder`.\r\n    ```java\r\n     @Override protected void onCreate(Bundle savedInstanceState) {\r\n        ..\r\n      \r\n        qrEader = new QREader.Builder(this, surfaceView, new QRDataListener() {\r\n          @Override public void onDetected(final String data) {\r\n            ..\r\n          }\r\n        }).build();\r\n        \r\n        // Call Init\r\n        qrEader.init();\r\n     }    \r\n    ```\r\n\r\n+ To start QR code detection, call `start()` on the `qreader` object \r\n```java\r\nqrEader.start();\r\n```\r\n+ To stop QR code detection, call `stop()` on the `qreader` object \r\n```java\r\nqrEader.stop();\r\n```\r\n+ To release and cleanup , call `releaseAndCleanup()` on the `qreader` object \r\n```java\r\nqrEader.releaseAndCleanup();\r\n```\r\n\r\n> NOTE : \r\n\r\n> 1. The library uses `android.permission.CAMERA` permission implicitly. For Android \r\nplatforms Marshmallow and above you need to make sure the permission is requested during  \r\nruntime and granted for QREader to function.\r\n\r\n> 2. The `onDetected(final String data)` function call returns the data string on a different\r\n thread, so in order for you to show the result on the main thread you need to use a handler. \r\n\r\n#####  Checkout the sample app for implementation\r\n\r\n\r\nP.S : You can use this nice [QR Code generator](https://www.the-qrcode-generator.com/) to test.\r\n\r\nLicense\r\n=======\r\n\r\n    Copyright 2016 Nishant Srivastava\r\n\r\n    Licensed under the Apache License, Version 2.0 (the \"License\");\r\n    you may not use this file except in compliance with the License.\r\n    You may obtain a copy of the License at\r\n\r\n       http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    Unless required by applicable law or agreed to in writing, software\r\n    distributed under the License is distributed on an \"AS IS\" BASIS,\r\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n    See the License for the specific language governing permissions and\r\n    limitations under the License.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}